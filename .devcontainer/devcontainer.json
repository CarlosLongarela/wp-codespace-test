// Update the VARIANT arg in docker-compose.yml to pick a PHP version
{
	"name": "PHP",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

	// Features to add to the dev container. More info: https://containers.dev/implementors/features.
	"features": {
	},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {		
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"xdebug.php-pack",
				"yogensia.searchwpdocs",
				"valeryanm.vscode-phpsab",
				"johnbillion.vscode-wordpress-hooks",
				"ms-azuretools.vscode-docker",
				"dbaeumer.vscode-eslint",
				"neilbrayfield.php-docblocker",
				"shevaua.phpcs",
				"ms-vscode.makefile-tools"
			]
		}
	},

	// For use with PHP or Apache (e.g.php -S localhost:8080 or apache2ctl start)
	"forwardPorts": [
		80,
		81,
		3306
	],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "sudo chmod a+x \"$(pwd)\" && sudo rm -rf /var/www/html && sudo ln -s \"$(pwd)\" /var/www/html"
	"postCreateCommand": "./.devcontainer/postCreateCommand.sh > .devcontainer/postCreateCommand.log  && code - r wordpress/wp-content/plugins/wp-codespace/wp-codespace.php",
	"portsAttributes": {
		"3306": {
			"label": "Database (internal)"
		},
		"80": {
			"label": "WordPress"
		},
		"81": {
			"label": "phpMyAmdin"
		}
	}

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"

	//"postStartCommand": "docker-compose restart"
}